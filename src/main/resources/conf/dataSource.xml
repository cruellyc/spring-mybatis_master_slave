<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:p="http://www.springframework.org/schema/p"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:aop="http://www.springframework.org/schema/aop"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xmlns:util="http://www.springframework.org/schema/util"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
    http://www.springframework.org/schema/util
    http://www.springframework.org/schema/util/spring-util-3.2.xsd">
	<!-- 根据类路径加载mybatis的配置文件 -->  
    <context:property-placeholder location="classpath:conf/jdbc.properties" />
    <bean id="masterDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" >
        <property name="driverClass" value="com.mysql.jdbc.Driver"></property>
        <property name="jdbcUrl" value="${database.master.jdbcUrl}"></property>
        <property name="user" value="${database.master.user}" />
        <property name="password" value="${database.master.password}" />
        <property name="maxPoolSize" value="${database.master.maxPoolSize}"></property>  
        <property name="minPoolSize" value="${database.master.minPoolSize}"></property>
        <property name="maxIdleTime" value="${database.master.maxIdleTime}"></property>
        <property name="idleConnectionTestPeriod" value="${database.master.idleConnectionTestPeriod}"></property>
    </bean>
    
    <bean id="slaveDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" >
        <property name="driverClass" value="com.mysql.jdbc.Driver"></property>
        <property name="jdbcUrl" value="${database.slave.jdbcUrl}"></property>
        <property name="user" value="${database.slave.user}" />
        <property name="password" value="${database.slave.password}" />
        <property name="maxPoolSize" value="${database.slave.maxPoolSize}"></property>  
        <property name="minPoolSize" value="${database.slave.minPoolSize}"></property>
        <property name="maxIdleTime" value="${database.slave.maxIdleTime}"></property>
        <property name="idleConnectionTestPeriod" value="${database.slave.idleConnectionTestPeriod}"></property>
    </bean>
    <!-- 此类继承了AbstractRoutingDataSource 类，且 AbstractRoutingDataSource类 为Spring jdbc中提供的类，需要重写其中的determineCurrentLookupKey()方法，获取当前切换到的数据库源名称-->
    <bean id="dataSource" class="com.cache.dataSource.DynamicDataSource">
        <property name="targetDataSources"><!-- 将数据源置入到类中，通过之后的aop拦截到的数据库名称，匹配到指定的数据源进而链接 -->
            <map key-type="java.lang.String">
                <entry key="master" value-ref="masterDataSource"/>
                <entry key="slave" value-ref="slaveDataSource"/>
            </map>
        </property>
        <property name="defaultTargetDataSource" ref="masterDataSource"/>
    </bean>
    <!-- 配置数据库注解aop -->
    <aop:aspectj-autoproxy></aop:aspectj-autoproxy>
    <bean id="manyDataSourceAspect" class="com.cache.dataSource.DataSourceAspect"/>
    <aop:config>
        <aop:aspect id="dataSourceCut" ref="manyDataSourceAspect"><!-- 切面类 -->
            <aop:pointcut expression="execution(* com.cache.IDao..*(..))" id="dataSourceCutPoint"/><!-- 配置切点 -->
            <aop:before pointcut-ref="dataSourceCutPoint" method="before"/><!-- 切面执行方法 -->
        </aop:aspect>
    </aop:config>
</beans>